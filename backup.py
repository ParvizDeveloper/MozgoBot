import telebot
from telebot import types
import psycopg2
import os
from datetime import datetime

bot = telebot.TeleBot('8125147433:AAG5UmSLaSUl23DicIcMeEd7sq2wNT-Zp_E')
games = [
    ['–í–µ—á–Ω—ã–µ —Ö–∏—Ç—ã', '–¢—É—Ü-–¢—É—Ü –ö–≤–∏–∑', '–¢–µ–º–∞—Ç–∏–∫–∞', '09-11-2024', '19:00',
     'Nebo', "—É–ª. –ê.–¢–µ–º—É—Ä–∞ 53", 50000, True, './images/mzgb.jpg']
]

IMAGE_DIR = './images/'

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_HOST = 'localhost'
DB_PORT = '5432'
DB_USER = 'postgres'
DB_PASSWORD = '6653'
DB_NAME = 'mzgbDb'

def get_db_connection():
    return psycopg2.connect(
        host=DB_HOST,
        port=DB_PORT,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME,
    )
connection = get_db_connection()

cursor = connection.cursor()
# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
def create_table():
    connection = get_db_connection()
    cursor = connection.cursor()
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS public.games (
        id SERIAL PRIMARY KEY,
        name_game VARCHAR(200),
        name_theme VARCHAR(200),
        game_date VARCHAR(200),
        time VARCHAR(200),
        place VARCHAR(200),
        address VARCHAR(200),
        price INTEGER,
        is_now BOOLEAN,
        picture VARCHAR(200)
    );
    ''')
    connection.commit()
    cursor.close()
    connection.close()


cursor.execute('''
CREATE TABLE IF NOT EXISTS public.people
(
    id serial NOT NULL,
    name character varying(200),
    phone_number character varying(20),
    user_id bigint,
    which_game character varying(200),
    name_team character varying(200),
    PRIMARY KEY (id)
);
''')
cursor.execute('''
CREATE TABLE IF NOT EXISTS public.teams
(
    id serial NOT NULL,
    name_leader character varying(200),
    team_name character varying(20),
    user_id_leader bigint,
    game_reg character varying(200),
    PRIMARY KEY (id)
);
''')
# –æ–±—Ä–∞–±–æ—Ç–∫–∞ /start
@bot.message_handler(commands=['start'])
def main(message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    cursor.execute(f"SELECT * FROM public.people WHERE user_id = '{user_id}'")
    check = cursor.fetchone()
    if not check:
        cursor.execute(f"INSERT INTO public.people (name, user_id) VALUES ('{user_name}', {user_id})")
    else:
        pass
    connection.commit()
    file = open('./images/mzgb_logo.jpg', 'rb')
    bot.send_photo(message.chat.id, file)
    bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç!</b>üëã \n \n'
                                      '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–æ–∑–≥–æ–±–æ–π–Ω—é ‚Äî —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–≤–∏–∑, –≥–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –∏'
                                      '–ø–æ—Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏! üß†üéâ \n \n'
                                      '–ö–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ –≤–∫–ª—é—á–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–∑–Ω—ã–º —Ç–µ–º–∞–º: –æ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∏ –Ω–∞—É–∫–∏ –¥–æ –ø–æ–ø-–∫—É–ª—å—Ç—É—Ä—ã –∏ '
                                      '—Å–ø–æ—Ä—Ç–∞. üìöüé¨‚öΩ –ü–æ–∫–∞–∂–∏—Ç–µ, –Ω–∞ —á—Ç–æ –≤—ã —Å–ø–æ—Å–æ–±–Ω—ã, –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–µ–º–ø–∏–æ–Ω–æ–º –ú–æ–∑–≥–æ–±–æ–π–Ω–∏! üèÜ \n \n'
                                      '–£–¥–∞—á–∏! üçÄ', parse_mode='html')
    bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ, –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É.')
@bot.message_handler(commands=['admin'])
def main(message):
    user_id = message.from_user.id
    if user_id == 577593785:
        bot.send_message(message.chat.id, '–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. \n \n'
                                                '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /add_game , /del_game'
                         )
    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.')
# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def adder(name_game, name_theme, game_date, time, place, address, price, is_now, picture):
    connection = get_db_connection()
    cursor = connection.cursor()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    cursor.execute('''
        INSERT INTO public.games 
        (name_game, name_theme, game_date, time, place, address, price, is_now, picture)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
    ''', (name_game, name_theme, game_date, time, place, address, price, is_now, picture))

    connection.commit()
    cursor.close()
    connection.close()


# –°—Ç–∞—Ä—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
@bot.message_handler(commands=['add_game'])
def main(message):
    user_id = message.from_user.id
    if user_id == 577593785:
        def start_add_game(message):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –í–µ—á–Ω—ã–µ —Ö–∏—Ç—ã):")
            bot.register_next_step_handler(message, process_name_game)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã
        def process_name_game(message):
            name_game = message.text
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¢—É—Ü-–¢—É—Ü –ö–≤–∏–∑):")
            bot.register_next_step_handler(message, process_name_theme, name_game)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–º—ã –∏–≥—Ä—ã
        def process_name_theme(message, name_game):
            name_theme = message.text
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 09-11-2024):")
            bot.register_next_step_handler(message, process_game_date, name_game, name_theme)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã –∏–≥—Ä—ã
        def process_game_date(message, name_game, name_theme):
            game_date = message.text
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 19:00):")
            bot.register_next_step_handler(message, process_time, name_game, name_theme, game_date)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã
        def process_time(message, name_game, name_theme, game_date):
            time = message.text
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: Nebo):")
            bot.register_next_step_handler(message, process_place, name_game, name_theme, game_date, time)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Å—Ç–∞ –∏–≥—Ä—ã
        def process_place(message, name_game, name_theme, game_date, time):
            place = message.text
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: —É–ª. –ê.–¢–µ–º—É—Ä–∞ 53):")
            bot.register_next_step_handler(message, process_address, name_game, name_theme, game_date, time, place)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥—Ä–µ—Å–∞ –∏–≥—Ä—ã
        def process_address(message, name_game, name_theme, game_date, time, place):
            address = message.text
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —É—á–∞—Å—Ç–∏—è –≤ –∏–≥—Ä–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 50000):")
            bot.register_next_step_handler(message, process_price, name_game, name_theme, game_date, time, place, address)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–Ω—ã –∏–≥—Ä—ã
        def process_price(message, name_game, name_theme, game_date, time, place, address):
            try:
                price = int(message.text)
                bot.send_message(message.chat.id, "–ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –Ω–∞–±–æ—Ä –Ω–∞ –∏–≥—Ä—É? (–û—Ç–≤–µ—Ç—å—Ç–µ 'True' –∏–ª–∏ 'False'):")
                bot.register_next_step_handler(message, process_is_now, name_game, name_theme, game_date, time, place, address,
                                               price)
            except ValueError:
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).")


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã (–∏–≥—Ä–∞–µ–º –ª–∏ —Å–µ–π—á–∞—Å)
        def process_is_now(message, name_game, name_theme, game_date, time, place, address, price):
            is_now = message.text.lower() == 'true'
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–≥—Ä—ã:")
            bot.register_next_step_handler(message, process_picture, name_game, name_theme, game_date, time, place, address,
                                           price, is_now)


        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–≥—Ä—ã
        def process_picture(message, name_game, name_theme, game_date, time, place, address, price, is_now):
            if message.content_type == 'photo':
                # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ
                file_info = bot.get_file(message.photo[-1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)

                # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if not os.path.exists(IMAGE_DIR):
                    os.makedirs(IMAGE_DIR)

                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
                file_name = f"{datetime.now().strftime('%Y%m%d%H%M%S')}.jpg"
                file_path = os.path.join(IMAGE_DIR, file_name)

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ
                with open(file_path, 'wb') as new_file:
                    new_file.write(downloaded_file)

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                adder(name_game, name_theme, game_date, time, place, address, price, is_now, file_path)

                bot.send_message(message.chat.id, f"–ò–≥—Ä–∞ '{name_game}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
            else:
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.")
        connection.commit()
    else:
        bot.send_message(message.chat.id, "–û—Ç–∫–∞–∑–∞–Ω–æ. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.")

if __name__ == '__main__':
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    create_table()

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot.polling(none_stop=True)