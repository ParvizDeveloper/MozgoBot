import telebot
from telebot import types
import psycopg2
import os
from datetime import datetime
import time

bot = telebot.TeleBot('')

IMAGE_DIR = './images/img_games/'

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_HOST = 'localhost'
DB_PORT = '5432'
DB_USER = 'postgres'
DB_PASSWORD = '6653'
DB_NAME = 'mzgbDb'

def get_db_connection():
    return psycopg2.connect(
        host=DB_HOST,
        port=DB_PORT,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME,
    )
connection = get_db_connection()

cursor = connection.cursor()
# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
def create_table():
    connection = get_db_connection()
    cursor = connection.cursor()
    cursor.execute('''
    CREATE TABLE IF NOT EXISTS public.games (
        id SERIAL PRIMARY KEY,
        name_game VARCHAR(200),
        name_theme VARCHAR(200),
        game_date VARCHAR(200),
        time VARCHAR(200),
        place VARCHAR(200),
        address VARCHAR(200),
        price INTEGER,
        is_now BOOLEAN,
        picture VARCHAR(200)
    );
    ''')
    connection.commit()
    cursor.close()
    connection.close()


cursor.execute('''
CREATE TABLE IF NOT EXISTS public.people
(
    id serial NOT NULL,
    name character varying(200),
    phone_number character varying(20),
    user_id bigint,
    which_game character varying(200),
    name_team character varying(200),
    PRIMARY KEY (id)
);
''')
cursor.execute('''
CREATE TABLE IF NOT EXISTS public.teams
(
    id serial NOT NULL,
    name_leader character varying(200),
    team_name character varying(20),
    user_id_leader bigint,
    game_reg character varying(200),
    PRIMARY KEY (id)
);
''')
# –æ–±—Ä–∞–±–æ—Ç–∫–∞ /start
@bot.message_handler(commands=['start'])
def main(message):
    user_id = message.from_user.id
    user_name = message.from_user.first_name
    cursor.execute(f"SELECT * FROM public.people WHERE user_id = '{user_id}'")
    check = cursor.fetchone()
    if not check:
        cursor.execute(f"INSERT INTO public.people (name, user_id) VALUES ('{user_name}', {user_id})")
    else:
        pass
    connection.commit()
    file = open('./images/mzgb_logo.jpg', 'rb')
    bot.send_photo(message.chat.id, file)
    bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç!</b>üëã \n \n'
                                      '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ú–æ–∑–≥–æ–±–æ–π–Ω—é ‚Äî —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–≤–∏–∑, –≥–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –∏'
                                      '–ø–æ—Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏! üß†üéâ \n \n'
                                      '–ö–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ –≤–∫–ª—é—á–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–∑–Ω—ã–º —Ç–µ–º–∞–º: –æ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∏ –Ω–∞—É–∫–∏ –¥–æ –ø–æ–ø-–∫—É–ª—å—Ç—É—Ä—ã –∏ '
                                      '—Å–ø–æ—Ä—Ç–∞. üìöüé¨‚öΩ –ü–æ–∫–∞–∂–∏—Ç–µ, –Ω–∞ —á—Ç–æ –≤—ã —Å–ø–æ—Å–æ–±–Ω—ã, –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–µ–º–ø–∏–æ–Ω–æ–º –ú–æ–∑–≥–æ–±–æ–π–Ω–∏! üèÜ \n \n'
                                      '–£–¥–∞—á–∏! üçÄ', parse_mode='html')
    bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≥—Ä–µ, –≤–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É.')


# —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
@bot.message_handler(commands=['register'])
def register(message):
    markup = types.InlineKeyboardMarkup()
    btn2 = types.InlineKeyboardButton('–î–∞', callback_data='yes')
    btn3 = types.InlineKeyboardButton('–ù–µ—Ç', callback_data='no')
    markup.row(btn2, btn3)
    bot.reply_to(message, '–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –≤—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –í—ã —Å–æ–≥–ª–∞—Å–Ω—ã?', reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'yes':
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.delete_message(callback.message.chat.id, callback.message.message_id)

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        markup = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        item = telebot.types.KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True) #
        markup.add(item)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(callback.message.chat.id, "–ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.", reply_markup=markup) # –∑–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞

    elif callback.data == 'no':
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        bot.send_message(callback.message.chat.id, '–í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.')  # –æ—Ç–º–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏


@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    contact = message.contact
    phone_number = contact.phone_number
    user_id = message.from_user.id

    # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
    bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä—è—é –≤–∞—Å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...", reply_markup=telebot.types.ReplyKeyboardRemove())
    time.sleep(1.5)

    cursor.execute(f"SELECT * FROM public.people WHERE phone_number = '{phone_number}'")
    existing_entry = cursor.fetchone()

    if existing_entry:
        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —É –Ω–∞—Å")
    else:
        bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é\n–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã –≤–≤–µ–¥–∏—Ç–µ /register_team "
                                          "\n–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ /games")
        cursor.execute(f"""UPDATE public.people SET phone_number = '{phone_number}' WHERE user_id = {user_id};""")
        connection.commit()


# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
@bot.message_handler(commands=['admin'])
def main(message):
    user_id = message.from_user.id
    if user_id == 577593785:
        bot.send_message(message.chat.id, '–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. \n \n'
                                          '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /add_game , /del_game'
                         )
    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.')

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def adder(name_game, name_theme, game_date, time, place, address, price, is_now, picture):
    connection = get_db_connection()
    cursor = connection.cursor()

    cursor.execute('''
        INSERT INTO public.games 
        (name_game, name_theme, game_date, time, place, address, price, is_now, picture)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)
    ''', (name_game, name_theme, game_date, time, place, address, price, is_now, picture))

    connection.commit()
    cursor.close()
    connection.close()

# –°—Ç–∞—Ä—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
@bot.message_handler(commands=['add_game'])
def start_add_game(message):
    user_id = message.from_user.id
    if user_id == 577593785:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –í–µ—á–Ω—ã–µ —Ö–∏—Ç—ã –∏–ª–∏ –µ—Å–ª–∏ –æ—Å–æ–±–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏ –Ω–µ—Ç, "
                                          "–∫–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –≤ '–ö–ª–∞—Å—Å–∏–∫–∞', —Ç–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '-'):")
        bot.register_next_step_handler(message, process_name_game)
    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã
def process_name_game(message):
    name_game = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¢—É—Ü-–¢—É—Ü –ö–≤–∏–∑):")
    bot.register_next_step_handler(message, process_name_theme, name_game)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–º—ã –∏–≥—Ä—ã
def process_name_theme(message, name_game):
    name_theme = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 09-11-2024):")
    bot.register_next_step_handler(message, process_game_date, name_game, name_theme)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞—Ç—ã –∏–≥—Ä—ã
def process_game_date(message, name_game, name_theme):
    game_date = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 19:00):")
    bot.register_next_step_handler(message, process_time, name_game, name_theme, game_date)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã
def process_time(message, name_game, name_theme, game_date):
    time = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: Nebo):")
    bot.register_next_step_handler(message, process_place, name_game, name_theme, game_date, time)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Å—Ç–∞ –∏–≥—Ä—ã
def process_place(message, name_game, name_theme, game_date, time):
    place = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: —É–ª. –ê.–¢–µ–º—É—Ä–∞ 53):")
    bot.register_next_step_handler(message, process_address, name_game, name_theme, game_date, time, place)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥—Ä–µ—Å–∞ –∏–≥—Ä—ã
def process_address(message, name_game, name_theme, game_date, time, place):
    address = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —É—á–∞—Å—Ç–∏—è –≤ –∏–≥—Ä–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 50000):")
    bot.register_next_step_handler(message, process_price, name_game, name_theme, game_date, time, place, address)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–Ω—ã –∏–≥—Ä—ã
def process_price(message, name_game, name_theme, game_date, time, place, address):
    try:
        price = int(message.text)
        bot.send_message(message.chat.id, "–ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –Ω–∞–±–æ—Ä –Ω–∞ –∏–≥—Ä—É? (–û—Ç–≤–µ—Ç—å—Ç–µ 'True' –∏–ª–∏ 'False'):")
        bot.register_next_step_handler(message, process_is_now, name_game, name_theme, game_date, time, place, address, price)
    except ValueError:
        process_address(message, name_game, name_theme, game_date, time, place)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã (–∏–≥—Ä–∞–µ–º –ª–∏ —Å–µ–π—á–∞—Å)
def process_is_now(message, name_game, name_theme, game_date, time, place, address, price):
    is_now = message.text.lower() == 'true'
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–≥—Ä—ã:")
    bot.register_next_step_handler(message, process_picture, name_game, name_theme, game_date, time, place, address, price, is_now)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–≥—Ä—ã
def process_picture(message, name_game, name_theme, game_date, time, place, address, price, is_now):
    if message.content_type == 'photo':
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        if not os.path.exists(IMAGE_DIR):
            os.makedirs(IMAGE_DIR)

        file_name = f"{datetime.now().strftime('%Y%m%d%H%M%S')}.jpg"
        file_path = os.path.join(IMAGE_DIR, file_name)

        with open(file_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        adder(name_game, name_theme, game_date, time, place, address, price, is_now, file_path)

        bot.send_message(message.chat.id, f"–ò–≥—Ä–∞ '{name_game}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.")
connection.commit()



@bot.message_handler(commands=['games'])
def main(message):
    user_id = message.from_user.id
    cursor.execute(f"SELECT phone_number FROM public.people WHERE user_id = {user_id}")
    existing_entry = cursor.fetchone()
    if existing_entry is not None and existing_entry[0] is not None:
        bot.send_message(message.chat.id, '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä:')
        cursor.execute('''SELECT * FROM public.games''')
        rows = cursor.fetchall()
        if rows:
            for row in rows:
                id, name_game, name_theme, game_date, time, place, address, price, is_now, picture = row
                file = open(picture, 'rb')
                bot.send_photo(message.chat.id, file)
                if is_now:
                    now = '–î–∞'
                else:
                    now = '–ù–µ—Ç'
                bot.send_message(message.chat.id,
                                 f"–ù–æ–º–µ—Ä –∏–≥—Ä—ã: {id}\n–¢–µ–º–∞ –∏–≥—Ä—ã: {name_game}\n–¢–∏–ø –∏–≥—Ä—ã: {name_theme}\n–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: "
                                 f"{game_date}\n–í—Ä–µ–º—è: {time}\n–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: {place}\n"
                                 f"–ê–¥—Ä–µ—Å: {address}\n–¶–µ–Ω–∞ –∑–∞ —É—á–∞—Å–Ω–∏–∫–∞: {price} —Å—É–º\n–î–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏? {now}\n")
        else:
            bot.send_message(message.chat.id, '–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—É—Ç–ø–Ω—ã—Ö –∏–≥—Ä')

    else:
        bot.send_message(message.chat.id, '–í–∞–º –Ω–∞–¥–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ /register')




# —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä
@bot.message_handler(commands=['edit_game'])
def main(message):
    user_id = message.from_user.id
    if user_id == 577593785:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–≥—Ä—ã –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å. (–ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–º–µ—Ä –∏–≥—Ä—ã –≤—ã'
                                          '–º–æ–∂–µ—Ç–µ –≤ /games)')
        cursor.execute(f'''SELECT * FROM public.games WHERE id = {message.text}''')
        ed_game = cursor.fetchall()
        for row in ed_game:
            bot.send_message(message.chat.id, f"{row}")
            bot.send_message(message.chat.id, 'Das ist gut')

    else:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.')



if __name__ == '__main__':
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    create_table()

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot.polling(none_stop=True)
